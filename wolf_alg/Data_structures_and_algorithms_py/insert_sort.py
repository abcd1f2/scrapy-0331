#coding=utf-8


"""
    插入排序不是通过交换位置而是通过比较找到合适的位置插入元素来达到排序的目的的。
    举个栗子，对5,3,8,6,4这个无序序列进行简单插入排序，首先假设第一个数的位置时正确的，想一下在拿到第一张牌的时候，没必要整理。然后3要插到5前面，把5后移一位，变成3,5,8,6,4.想一下整理牌的时候应该也是这样吧。
        然后8不用动，6插在8前面，8后移一位，4插在5前面，从5开始都向后移一位。注意在插入一个数的时候要保证这个数前面的数已经有序。简单插入排序的时间复杂度也是O(n^2)

    元素被分为有序区和无序区两部分。最初有序区只有一个元素。每次从无序区中选择一个元素，插入到有序区的位置，直到无序区变空。
"""


def insert_sort(l):
    for i in range(1, len(l)):
        tmp_indx = i
        tmp_val = l[tmp_indx]
        for j in range(i-1, -1, -1):
            if l[j] > tmp_val:
                # 不是交换，是向后移动
                #l[j],l[j+1]=l[j+1],l[j]
                l[j+1] = l[j]
                #找到当前需要放置的位置
                tmp_indx = j
            else:
                break
        #现在不能这用使用，因为此时的l[i]已经被之前的覆盖了
        #l[tmp_indx] = l[i]
        l[tmp_indx] = tmp_val
    return l

if __name__ == '__main__':
    data = [1,20,40,28,18,2,3,5]
    print insert_sort(data)
